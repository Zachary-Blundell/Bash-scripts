#!/usr/bin/env bash

#    __________ __  __   ______                            __
#   / ___/ ___// / / /  / ____/___  ____  ____  ___  _____/ /_
#   \__ \\__ \/ /_/ /  / /   / __ \/ __ \/ __ \/ _ \/ ___/ __/
#  ___/ /__/ / __  /  / /___/ /_/ / / / / / / /  __/ /__/ /_
# /____/____/_/ /_/   \____/\____/_/ /_/_/ /_/\___/\___/\__/

# Author : Zachary Blundell
# sconnect – pick an alias from ~/.ssh/config and connect to it
# Works with GNU awk or any POSIX awk.

set -euo pipefail

CONFIG_FILE="${HOME}/.ssh/config"

# ---------- sanity checks ----------------------------------------------------
if [[ ! -f "$CONFIG_FILE" ]]; then
  printf "❌  %s not found – nothing to do.\n" "$CONFIG_FILE" >&2
  exit 1
fi

# ---------- harvest host aliases --------------------------------------------
#  • we look only at lines that *start* with the word “Host” (case-insensitive)
#  • we ignore any alias that contains * or ?  (wild-cards / patterns)
#  • we split “Host a b c” into three separate aliases
#  • we deduplicate and sort for a tidy menu

mapfile -t HOSTS < <(
  awk '
    # Only lines whose 1st field is "Host" (any case)
    tolower($1) == "host" {
      # Walk through all remaining fields on that line
      for (i = 2; i <= NF; i++) {
        # Skip wild-card patterns
        if ($i ~ /[*?]/) next
        print $i
      }
    }
  ' "$CONFIG_FILE" | sort -u
)

if [[ "${#HOSTS[@]}" -eq 0 ]]; then
  printf "❌  No explicit Host aliases found in %s.\n" "$CONFIG_FILE" >&2
  exit 1
fi

# ---------- interactive menu -------------------------------------------------
echo "🔐  Select the SSH host you want to connect to:"

HOST=$(printf '%s\n' "${HOSTS[@]}" | fzf --height=40% --prompt='SSH > ') || exit
exec ssh "$HOST"
